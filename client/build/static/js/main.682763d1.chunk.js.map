{"version":3,"sources":["components/AllLists.js","components/Dashboard.js","Recipes/ListForm.js","Recipes/Recipes.js","Recipes/Directions.js","Recipes/RecipeWrapper.js","components/AppWrapper.js","components/Form.js","components/Show.js","components/CreateList.js","Recipes/Contact.js","App.js","serviceWorker.js","index.js"],"names":["AllLists","listState","submitState","setListState","setSubmitState","className","scope","map","list","index","key","name","onClick","navigate","_id","id","axios","delete","then","res","catch","err","console","log","Dashboard","useState","nameState","setNameState","useEffect","get","data","onSubmit","e","preventDefault","post","placeholder","onChange","target","value","type","ListForm","getRecipe","ingredient","style","marginBottom","defaultValue","Recipes","props","recipes","recipe","title","src","image","alt","to","Directions","state","setState","a","printRec","sourceUrl","API_KEY","RecipeWrapper","recipeName","elements","fetch","api_call","json","this","Component","AppWrapper","Form","changeHandler","submit","inputState","items","Show","remove","Card","align","Body","Title","Text","filter","item","bought","i","put","CreateList","setInputState","groceryState","setGroceryState","event","Contact","Jumbotron","Button","color","App","Container","fluid","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.682763d1.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { navigate } from '@reach/router'\n\nfunction AllLists ({listState, setListState, submitState, setSubmitState}) {\n\n    const deleteGroceryList = (id) => {\n        axios.delete('http://localhost:8000/api/grocery/' + id)\n            .then(res =>{ \n                setSubmitState(!submitState)\n            })\n            .catch(err => console.log(err))\n    } \n    return (\n        <div className=\"App-header\">\n\n            <table className=\"table\">\n            <thead className=\"thead-light\">\n                <tr>\n                <th scope=\"col\">List</th>\n                <th scope=\"col\">Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {listState.map((list, index)=> \n                    <tr key={index}>\n                        <th scope=\"row\">{list.name}</th>\n                        <td>\n                            <button className=\"btn btn-primary\" onClick ={() => navigate(`/grocery/${list._id}`)} >Details</button>\n                            <button className=\"btn btn-danger ml-2\" onClick={() => {deleteGroceryList(list._id)}}>Delete</button>\n                        </td>\n                    </tr>\n                )}\n\n            </tbody>\n            </table>\n\n\n        </div>\n    )\n} \nexport default AllLists","import React, { useState, useEffect } from 'react'\nimport AllLists from './AllLists'\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nfunction Dashboard () {\n\n    const [listState, setListState] = useState([]);\n    const [nameState, setNameState] = useState(\"\");\n    const [submitState, setSubmitState] = useState(false)\n\n    \n    const submitHandler = e => {\n        e.preventDefault();\n        console.log(\"Submitted\")\n        axios.post('http://localhost:8000/api/grocery', {\n                name: nameState\n        }) \n            .then(res =>\n                navigate(\"/grocery/\" + res.data._id))\n                \n            .catch(err => console.log(\"Error\"))\n    }\n\n    useEffect(()=> {\n        axios.get('http://localhost:8000/api/grocery')\n            .then(res =>{\n                setListState(res.data)\n            })\n            .catch(err => console.log(err))\n    }, [submitState])\n\n    return (\n        <div className=\"App-header\">\n            <h1 className=\"App-title\">Create a new Grocery List</h1>\n            <form onSubmit={submitHandler}>\n                <input placeholder=\"ex: Trader Joe's Run\" onChange = {(e)=>setNameState(e.target.value)}></input>\n                <button className=\"btn btn-success ml-2\" type=\"submit\">Submit</button>\n            </form><br/>\n            <AllLists submitState={submitState} setSubmitState={setSubmitState} listState={listState} setListState={setListState}/>\n        </div>\n    )\n}\n\nexport default Dashboard","import React from 'react';\n\n\n\nconst ListForm = ({getRecipe, ingredient}) => {\n    return(\n        <form onSubmit={getRecipe} style={{ marginBottom:\"2rem\" }}>\n            <input className=\"form__input\" type='text' name=\"recipeName\" defaultValue={ingredient} />\n\n            <button className=\"form__button btn btn-success btn-sm ml-4 mt-1\">Search</button>\n        </form>\n    )\n};\n\n\nexport default ListForm;","import React from \"react\";\nimport { Link } from \"@reach/router\"\n\nconst Recipes = props => (\n    <div className=\"container\">\n        <div className=\"row\">\n        { props.recipes.map((recipe)=> {\n        return (\n            <div key={recipe.title} className=\"col-md-4\" style={{ marginBottom:'2rem' }}>\n                <div className=\"recipe__box\">\n                    <img className=\"recipe__box-img\" src={recipe.image} alt={recipe.title}/>\n                    <div className=\"recipe__text\">\n                        <h4>{ recipe.title }</h4>\n                        <Link to={`/recipe/${recipe.id}`}>View Recipe</Link>\n                    </div>\n                </div>\n            </div>\n            )\n        })}\n        </div>\n    </div>\n)\n\nexport default Recipes;\n","import React, { useEffect, useState } from 'react'\nimport axios from \"axios\"\nimport { navigate } from \"@reach/router\"\n\nconst Directions = ({id}) => {\n\n    const [state, setState] = useState([])\n\n    \n    const redirectHandler = () =>{\n        navigate(`${state.sourceUrl}`)\n    }\n\n    useEffect( ()=> {\n        async function printRec(){\n            await axios.get(`https://api.spoonacular.com/recipes/${id}/information?includeNutrition=false&apiKey=a416d2bf9ec645d0b3ea10e602bce75c`)\n            .then(res =>{\n                console.log(res)\n                setState(res.data)\n            })\n            .catch(err => console.log(err))\n        }\n        printRec()\n    }, [])\n\n    return (\n        <div>\n            <h1>This is a link: </h1>\n            <button onClick={redirectHandler}>Click for website</button>\n        </div>\n    )\n}\n\nexport default Directions;\n","import React, { Component } from 'react'\n\nimport ListForm from \"./ListForm\"\nimport Recipes from \"./Recipes\"\nimport Directions from \"./Directions\"\n\nconst API_KEY =\"a416d2bf9ec645d0b3ea10e602bce75c\"\n\nclass RecipeWrapper extends Component {\n\n        state = {\n            recipes: []\n        }\n    \n    \n    getRecipe = async (e) => {\n        const recipeName = e.target.elements.recipeName.value;\n\n        e.preventDefault () ;\n        const api_call = await fetch (\n            `https://api.spoonacular.com/recipes/findByIngredients?ingredients=${recipeName}&number=9&apiKey=${API_KEY}`\n        )\n        const data = await api_call.json();\n        this.setState({ recipes: data});\n        console.log(this.state.recipes)\n        console.log(recipeName)\n    }\n\n    render() {\n        return (\n            <div className=\"RecipeWrapper\">\n                <header className=\"App-header\">\n                    <h1 className=\"App-title\"> Recipe Search</h1>\n                </header>\n                <ListForm ingredient={this.props.ingredient} getRecipe={this.getRecipe}/>\n                <Recipes  recipes={this.state.recipes}/>\n                \n            </div>\n        )\n    }\n}\n\nexport default RecipeWrapper","\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport Dashboard from './Dashboard'\nimport RecipeWrapper from '../Recipes/RecipeWrapper';\n\nfunction AppWrapper  () {\n    const [listState, setListState] = useState([])\n\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8000/api/grocery\")\n            .then(res => setListState(res.data))\n            .catch(err => console.log(err))\n    }, []);\n    \n    return(\n        <div>\n            <Dashboard listState={listState} setListState={setListState} />\n            <RecipeWrapper />\n        </div>\n    );\n}\n\nexport default AppWrapper;","import React from 'react'\n\nconst Form = ({changeHandler, submit, inputState, items}) => {\n\n    \n    return(\n        <div>\n            <h1>Grocery List</h1>\n                <form onSubmit={submit}>\n                    <input placeholder=\"ex. peanut butter\" value={inputState} type=\"text\" name=\"task\" onChange={changeHandler}/>\n                    <button className=\"btn btn-success ml-2\" type=\"submit\">Add</button>\n                </form><br/>\n        </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\nimport axios from 'axios'\n\n\nimport { Card } from 'react-bootstrap'\nimport { navigate } from '@reach/router'\n\n\nconst Show = ({items, remove, setSubmitState, submitState}) => {\n    \n    const purchaseOneItem = (id) => {\n        axios.put(\"http://localhost:8000/api/grocery/item/\" + id)\n            .then(res=> setSubmitState(!submitState))\n            .catch(err => console.log(\"ERR: \",err))\n    }\n\n  \n\n    return(\n\n                <Card\n                    style={{ width: '15rem' }, {align: 'center'}}\n                >\n                    {/* <Card.Header>{items.name}</Card.Header> */}\n                    <Card.Body>\n                    <Card.Title>{items.name}</Card.Title>\n                    <Card.Text>\n                   \n                        <table className=\"table\">\n                        <thead className=\"thead-light\">\n                            <tr>\n                                <th scope=\"col\">Ingredient</th>\n                                <th scope=\"col\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {items.list.filter(item => item.bought == false).map((item, i)=> \n                            <tr key={i}>\n                                <th scope=\"row\">{item.ingredient}</th>\n                            <td>\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm ml-4 mt-1\" onClick={() => {purchaseOneItem(item._id)}}>Purchased</button>\n                            <button type=\"submit\" className=\"btn btn-success btn-sm ml-4 mt-1\" onClick={() => navigate(`/grocery/${item.ingredient}/search`)}>Recipes</button>\n                            </td>\n                            </tr>\n                        )}\n\n                        </tbody>\n                        </table>\n                    </Card.Text>\n                    </Card.Body>\n                </Card>\n    \n              \n    )\n}\nexport default Show","import React, { useState, useEffect } from 'react';\nimport Form from \"./Form\"\nimport Show from \"./Show\"\nimport axios from 'axios'\n\nfunction CreateList  ({id}) {\n\n    const [inputState, setInputState] = useState(\"\")\n    const [groceryState, setGroceryState] = useState({\n        name:\"\",\n        list:[]\n    })\n    const [submitState, setSubmitState] = useState(false)\n\n    const changeHandler = (event) => {\n        setInputState(event.target.value)\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        axios.put(\"http://localhost:8000/api/grocery/\" + id, {ingredient:inputState})\n            .then(res => setGroceryState(res.data))\n            .catch()\n        console.log(\"Submitted\");\n        setInputState(\"\")\n    }\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/grocery/\" + id)\n            .then(res => {\n                console.log(\"LIST: \", res.data)\n                setGroceryState(res.data)\n            })\n            .catch(err => console.log(err))\n    },[submitState])\n\n    return(\n        <div>\n            <Form changeHandler={changeHandler} submit={submitHandler} inputState={inputState}/>\n            <Show submitState={submitState} setSubmitState={setSubmitState} items={groceryState} />\n        </div>\n    );\n}\n\nexport default CreateList;","import React from 'react'\nimport { Jumbotron, Button } from 'reactstrap';\n\nfunction Contact() {\n    return (\n        <div>\n            <Jumbotron>\n                <h1 className=\"display-3\">GrocerRecipe</h1>\n                <p className=\"lead\">Thank you for using GrocerRecipe. We are two guys who wanted to create an app that will let you make your grocery list and get inspiration to make delicious meals.</p>\n                <hr className=\"my-2\"/>\n                <p>Built entirely in React, we've used the Spoonacular API to cull recipes for ingredients you input into the recipe search bar. Bon appetit!</p>\n                <p className=\"lead\">\n                    <Button color=\"success\">Learn More</Button>\n                </p>\n            </Jumbotron>\n        </div>\n    )\n}\n\nexport default Contact\n","import React from 'react';\nimport './App.css';\nimport AppWrapper from \"./components/AppWrapper\"\nimport { Router, Link } from '@reach/router'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n// import NavbarBrand from \"react-bootstrap/NavbarBrand\";\nimport CreateList from './components/CreateList';\nimport RecipeWrapper from \"./Recipes/RecipeWrapper\"\nimport Contact from \"./Recipes/Contact\"\nimport Directions from \"./Recipes/Directions\"\n\nfunction App() {  \n  return (\n    <div className=\"App\">\n        <Container className=\"p-0\" fluid={true}>\n          {/* //navbar on top */}\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand> <Link to =\"/\">GrocerRecipe</Link></Navbar.Brand>\n\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\"/>\n            <Navbar.Collapse id=\"navbar-toggle\">\n              <Nav className='ml-auto'>\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n\n                <Link className=\"nav-link\" to=\"/grocery/Ingredient/search\">Recipes</Link>\n\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        </Container>\n        <Router>\n          <AppWrapper path=\"/\" /> \n          <CreateList path=\"/grocery/:id\" />\n          <RecipeWrapper path=\"/grocery/:ingredient/search\"/>\n          <Contact path=\"/contact\"/>\n          <Directions path=\"/recipe/:id\" /> \n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}